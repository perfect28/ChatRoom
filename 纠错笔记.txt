总体过程：
首先是服务器这边利用ServerSocket发起监听
然后客户端响应连接得到socket，服务器同时利用accept得到socket

服务器初始化的时候：
一直监听是否有新用户加入，一旦有人加入，新开启一个用户线程专门与其交互，并且保存线程信息，主线程继续监听
线程具体来说：
通过socket得到printwriter和bufferedreader，以此来和客户端进行交互
获取用户的基本信息，初始化该用户线程的成员变量
一直等待客户端的消息，一旦获取，解析消息，执行响应的命令
命令具体包括：MSG(转发用户发的消息),PTP(转发私聊的消息),QUIT(响应用户的退出请求)


客户端初始化的时候：
(1)通过socket得到printwriter和bufferedreader，以此来和服务器进行交互
(2)向服务器发送自己的基本消息，以更新用户列表
(3)开启监听服务器的线程，以随时更新界面
线程具体来说：
通过socket得到printwriter和bufferedreader，以此来和服务器进行交互
一直等待服务器的消息，一旦获取，解析消息，执行响应的命令
命令具体包括：NewUser(进来新用户),MSG(有用户发消息),PTP(有人想私聊),QUIT(服务器返回退出响应)



1.printwritre和bufferedwriter相比优点是可以自动刷新，但要传入参数true，
否则后面需要手动flush，切记~
PrintStream主要操作byte流而PrintWriter用来操作字符流

2.问题主要集中在，为什么客户端调用了write()和flush()后，服务器端依然read不到数据。
因为socket.getOutputStream()取到的实现类是java.net.SocketOutputStream，这个类并没有覆写flush方法，
它的父类java.io.FileOutputStream也没有覆写，于是最终就调到了最顶层java.io.OutputStream的flush()方法，
这就恶心了，这个方法是空的。

3.serversokcet一开始申请的是全局变量，却又用成了局部变量，也就是每次都新起一个server……但是
开两个客户端就死循环的问题仍然没有解决。

4.突然，我想起来好像自己在客户端的监听服务器的线程里面直接更新了客户端的界面，不知道会不会引起
线程混乱。

5.并没有这方面的问题，只是自己的协议写的有问题，解析字符串出错了。

6。之前报的空指针的错误原来是DefaultListModel没有new……

7,将线程中的套接字与全局变量套接字搞混，结果一直不能二次连接。